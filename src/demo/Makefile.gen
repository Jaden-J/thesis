ifndef WITH_CRYPTO
WITH_CRYPTO = no
endif

ifndef WITH_TIME
WITH_TIME = no
endif

ifndef FAILURE_PCT
FAILURE_PCT = 0
endif

FOO_LANG_DIR=../../foo-lang
PLATFORMS_DIR=$(FOO_LANG_DIR)/platforms
FOO_LIB_DIR=$(FOO_LANG_DIR)/foo-lib/C

INCLUDE_PATH=$(PLATFORMS_DIR) -I$(FOO_LIB_DIR) -I.

MOOSE_DIR=$(PLATFORMS_DIR)/moose

REMOVE_FOO_LIBS=$(FOO_LIB_DIR)/foo-lib/test_all.c \
                $(FOO_LIB_DIR)/foo-lib/time.c \
								$(FOO_LIB_DIR)/foo-lib/moose/test_all.c

ifneq ($(WITH_CRYPTO), yes)
REMOVE_FOO_LIBS+=$(FOO_LIB_DIR)/foo-lib/sha1.c
REMOVE_FOO_LIBS+=$(FOO_LIB_DIR)/foo-lib/crypto.c
endif

ifneq ($(WITH_TIME), yes)
REMOVE_FOO_LIBS+=$(FOO_LIB_DIR)/foo-lib/moose/time.c
endif

MORE_SRC_BASE = $(wildcard $(MOOSE_DIR)/*.c) 					\
           		  ../lib/network.c 											\
		            $(filter-out $(REMOVE_FOO_LIBS), \
							 							$(wildcard $(FOO_LIB_DIR)/foo-lib/*.c))  \
		            $(filter-out $(REMOVE_FOO_LIBS), \
						  							 $(wildcard $(FOO_LIB_DIR)/foo-lib/moose/*.c)) \
		            $(wildcard *.c)

MORE_OBJECTS_BASE = $(patsubst %.c, %.o, $(MORE_SRC_BASE))

ifeq ($(wildcard node_t.h),)
	MORE_SRC = $(filter-out $(FOO_LIB_DIR)/foo-lib/nodes.c \
													$(FOO_LIB_DIR)/foo-lib/moose/nodes.c, \
						 							$(MORE_SRC_BASE))
	MORE_OBJECTS = $(filter-out $(FOO_LIB_DIR)/foo-lib/nodes.o \
															$(FOO_LIB_DIR)/foo-lib/moose/nodes.o, \
															$(MORE_OBJECTS_BASE))
else
	MORE_CDEFS += -DNODES_T_H=node_t.h
	MORE_SRC = $(MORE_SRC_BASE)
	MORE_OBJECTS = $(MORE_OBJECTS_BASE)
endif

MCU=atmega1284p
F_CPU=8000000

AVRDUDE_PROGRAMMER=jtag2

# external hardware composition ... yummie :-)
MORE_CDEFS+=-DSERIAL_ON_USART1 # -DXBEE_ON_USART0 == default
# MORE_CDEFS+=-DDEBUG

MORE_CDEFS += -DFORWARD_FAILURE_PCT=$(FAILURE_PCT)

include $(MOOSE_DIR)/Makefile

clean: clean_avr clean_more_objects

clean_avr:
	@(cd $(MOOSE_DIR); $(MAKE) clean)

clean_more_objects:
	@rm -f $(MORE_OBJECTS)

# setup and control targets

fuses:
	$(AVRDUDE) $(AVRDUDE_FLAGS) -U lfuse:w:0xE2:m

serial-digitus:
	screen /dev/tty.usbserial-FTSJ84AI 9600

serial-logilink:
	screen /dev/tty.usbserial 9600

.PRECIOUS: MORE_OBJECTS
